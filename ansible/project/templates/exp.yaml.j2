---
# vim: set ft=yaml:
- name: Patch Prometheus CRD
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Update Prometheus CRD and Re-enable monitoring
      k8s:
        state: present
        definition:
          api: monitoring.coreos.com/v1
          kind: Prometheus
          metadata:
            namespace: default
            name: kp-kube-prometheus-stack-prometheus
          spec:
            externalLabels:
              deployment_started_ts: "{{ deployment_started_ts }}"
              experiment_started_ts: "{{ experiment_started_ts }}"
            remoteWrite:
              - url: "{{ lookup('ansible.builtin.env', 'EXPERIMENT_STORAGE_URL') }}"
            replicas: 1

    - name: Wait for the specified number of replicas to become ready
      k8s_info:
        api: monitoring.coreos.com/v1
        kind: Prometheus
        name: kp-kube-prometheus-stack-prometheus
        namespace: default
      register: deployment_info
      until: deployment_info.resources[0].status.availableReplicas == deployment_info.resources[0].spec.replicas
      retries: 20
      delay: 2

- name: Deploy EXP
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - "{{ exp_name }}"

- name: Wrap up Experiment
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Wait for execution to finish
      shell: kubectl wait execution "{{ exp_name }}" --for=jsonpath='{.status.executionState}'=Finished --timeout=1h

    - name: Delete any past experiment
      kubernetes.core.k8s:
        state: absent
        api_version: theodolite.rocks/v1beta1
        kind: execution
        namespace: default
        name: "{{ exp_name }}"

    - name: Connect to theodolite-kafka-client pod and delete 'input' topic
      command: kubectl exec theodolite-kafka-client -- kafka-topics --bootstrap-server theodolite-kafka-kafka-bootstrap:9092 --delete --topic input
      # register: result_input
      # failed_when: "'DEPRECATED' in result_input.stdout or 'DEPRECATED' in result_input.stderr"
      # changed_when: "'Topic input is marked for deletion' in result_input.stdout"

    - name: Connect to theodolite-kafka-client pod and delete 'output' topic
      command: kubectl exec theodolite-kafka-client -- kafka-topics --bootstrap-server theodolite-kafka-kafka-bootstrap:9092 --delete --topic output
      # register: result_output
      # failed_when: "'DEPRECATED' in result_output.stdout or 'DEPRECATED' in result_output.stderr"
      # changed_when: "'Topic output is marked for deletion' in result_output.stdout"



    - name: Scale down Prometheus to 0
      k8s:
        state: present
        definition:
          api: monitoring.coreos.com/v1
          kind: Prometheus
          metadata:
            namespace: default
            name: kp-kube-prometheus-stack-prometheus
          spec:
            replicas: 0
