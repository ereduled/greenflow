---
# vim: set ft=yaml:
# - name: Common setup for both workers and controller
#   hosts: control, worker
#   become: true
#   strategy: free
#   gather_facts: true
#   roles:
#     - k3s-common

# - name: Install K3S and post-install config
#   hosts: control
#   become: true
#   gather_facts: false
#   roles:
#     - k3s-controller
- name: Common setup for both workers and controller
  hosts: control, worker
  become: true
  # strategy: free
  gather_facts: true
  tasks:
    - name: Create /etc/rancher/k3s
      tags: [always]
      shell:
        cmd: mkdir -p /etc/rancher/k3s
    - name: Copy registries.yaml
      tags: [always]
      ansible.builtin.template:
        src: registries.yaml.j2
        dest: /etc/rancher/k3s/registries.yaml
    - name: Create /etc/docker
      tags: [always]
      shell:
        cmd: mkdir -p /etc/docker
    - name: Copy daemon.json (docker)
      tags: [always]
      ansible.builtin.template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
    - name: Install docker
      tags: [always]
      ansible.builtin.package:
        name: docker.io
        state: present
    - name: Disable node exporter
      tags: [always]
      ansible.builtin.service:
        name: prometheus-node-exporter
        state: stopped
        enabled: false
      # - name: Update and upgrade
      #   tags: [always]
      #   ansible.builtin.apt:
      #     name: "*"
      #     state: latest
      #     update_cache: yes
      #   when: ansible_facts['os_family'] == "Debian"
    # - name: Install Docker
    #   tags: [always]
    #   shell:
    #     cmd: /grid5000/code/bin/g5k-setup-docker -t

- name: Install K3S and post-install config
  hosts: control
  become: true
  gather_facts: false
  tasks:
    - name: Install k3s on controller
      environment:
        INSTALL_K3S_EXEC: --disable=traefik --disable=local-storage --docker
        INSTALL_K3S_VERSION: v1.24.8+k3s1
        # K3S_TOKEN: K10787911fcda12ddecf7e216979de14959f7d521e09045647400b6daf21d16bd8b::server:dd400bd9-93dd-4402-8512-4cec59e5cf24
      shell:
        cmd: "curl -sfL https://get.k3s.io | sh -s -"

    - name: Get node token
      tags: [always]
      ansible.builtin.shell:
        cmd: sudo cat /var/lib/rancher/k3s/server/token
      register: NODE_TOKEN

    - name: "Create Dummy Host for saving *global* variable"
      tags: [always]
      add_host:
        name: "CONTROLLER_DETAILS"
        token: "{{ NODE_TOKEN.stdout }}"
        controller_ip: "{{ ansible_default_ipv4.address }}"

    - ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ kubeconfig_path }}"
        flat: true

- name: Setup Workers
  hosts: worker
  become: true
  gather_facts: false
  strategy: free
  tags:
    - worker
  tasks:
    - name: Install k3s on workers
      environment:
        K3S_URL: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443
        K3S_TOKEN: "{{ hostvars['CONTROLLER_DETAILS']['token'] }}"
        INSTALL_K3S_EXEC: --docker
        INSTALL_K3S_VERSION: v1.24.8+k3s1
      shell:
        cmd: curl -sfL https://get.k3s.io | sh -s -

- name: Post-install localhost configuration
  hosts: localhost
  gather_facts: false
  connection: local
  tags:
    - kubeconfig
    - always
  tasks:
    - name: Patch kubeconfig
      ansible.builtin.lineinfile:
        path: "{{ kubeconfig_path }}"
        regexp: 127.0.0.1:6443
        line: "    server: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443"

    - name: Patch kubeconfig
      ansible.builtin.replace:
        path: "{{ kubeconfig_path }}"
        regexp: default
        replace: exp

    - name: Set correct chmod on kubeconfig
      ansible.builtin.file:
        path: "{{ kubeconfig_path }}"
        mode: "0600"

    - name: Wait for all k3s nodes to be ready
      shell: kubectl wait --for=condition=Ready nodes --all --timeout=600s
      register: nodes_ready
    - debug: var=nodes_ready.stdout_lines

- name: Post-install localhost configuration
  hosts: localhost
  gather_facts: false
  connection: local
  tags:
    - kubeconfig
    - always
  tasks:
    - name: Patch kubeconfig
      ansible.builtin.lineinfile:
        path: "{{ kubeconfig_path }}"
        regexp: 127.0.0.1:6443
        line: "    server: https://{{ hostvars['CONTROLLER_DETAILS']['controller_ip'] }}:6443"

    - name: Patch kubeconfig
      ansible.builtin.replace:
        path: "{{ kubeconfig_path }}"
        regexp: default
        replace: exp

    - name: Set correct chmod on kubeconfig
      ansible.builtin.file:
        path: "{{ kubeconfig_path }}"
        mode: "0600"

    - name: Wait for all k3s nodes to be ready
      shell: kubectl wait --for=condition=Ready nodes --all --timeout=600s
      register: nodes_ready
    - debug: var=nodes_ready.stdout_lines
