---
# vim: set ft=yaml:
apiVersion: v1
kind: ConfigMap
metadata:
  name: benchmark-resources-uc3-flink
  namespace: default
data:
  flink-configuration-configmap.yaml: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: flink-config
      labels:
        app: flink
    data:
      flink-conf.yaml: |+
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 1
        blob.server.port: 6124
        jobmanager.rpc.port: 6123
        taskmanager.rpc.port: 6122
        queryable-state.proxy.ports: 6125
        jobmanager.memory.process.size: 4Gb
        taskmanager.memory.process.size: 4Gb
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.interval: 10 SECONDS
        # gives metrics about inbound/outbound network queue lengths
        #taskmanager.network.detailed-metrics: true
      log4j-console.properties: |+
        # This affects logging for both user code and Flink
        rootLogger.level = INFO
        rootLogger.appenderRef.console.ref = ConsoleAppender
        #rootLogger.appenderRef.rolling.ref = RollingFileAppender

        # Uncomment this if you want to _only_ change Flink's logging
        #logger.flink.name = org.apache.flink
        #logger.flink.level = INFO

        # The following lines keep the log level of common libraries/connectors on
        # log level INFO. The root logger does not override this. You have to manually
        # change the log levels here.
        logger.akka.name = akka
        logger.akka.level = INFO
        logger.kafka.name= org.apache.kafka
        logger.kafka.level = INFO
        logger.hadoop.name = org.apache.hadoop
        logger.hadoop.level = INFO
        logger.zookeeper.name = org.apache.zookeeper
        logger.zookeeper.level = INFO

        # Log all infos to the console
        appender.console.name = ConsoleAppender
        appender.console.type = CONSOLE
        appender.console.layout.type = PatternLayout
        appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n

        # Log all infos in the given rolling file
        #appender.rolling.name = RollingFileAppender
        #appender.rolling.type = RollingFile
        #appender.rolling.append = false
        #appender.rolling.fileName = ${sys:log.file}
        #appender.rolling.filePattern = ${sys:log.file}.%i
        #appender.rolling.layout.type = PatternLayout
        #appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss,SSS} %-5p %-60c %x - %m%n
        #appender.rolling.policies.type = Policies
        #appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
        #appender.rolling.policies.size.size=100MB
        #appender.rolling.strategy.type = DefaultRolloverStrategy
        #appender.rolling.strategy.max = 10

        # Suppress the irrelevant (wrong) warnings from the Netty channel handler
        logger.netty.name = org.apache.flink.shaded.akka.org.jboss.netty.channel.DefaultChannelPipeline
        logger.netty.level = OFF
  jobmanager-deployment.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: flink-jobmanager
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: flink
          component: jobmanager
      template:
        metadata:
          labels:
            app: flink
            component: jobmanager
        spec:
          terminationGracePeriodSeconds: 0
          containers:
            - name: jobmanager
              image: ghcr.io/cau-se/theodolite-uc3-flink:latest
              env:
                - name: KAFKA_BOOTSTRAP_SERVERS
                  value: "theodolite-kafka-kafka-bootstrap:9092"
                - name: SCHEMA_REGISTRY_URL
                  value: "http://theodolite-kafka-schema-registry:8081"
                - name: CHECKPOINTING
                  value: "false"
                - name: PARALLELISM
                  value: "1"
                - name: "FLINK_STATE_BACKEND"
                  value: "rocksdb"
              resources:
                limits:
                  memory: 4Gi
                  cpu: 1000m
              args: ["standalone-job", "--job-classname", "rocks.theodolite.benchmarks.uc3.flink.HistoryServiceFlinkJob"] # optional arguments: ["--job-id", "<job id>", "--fromSavepoint", "/path/to/savepoint", "--allowNonRestoredState"]
              #command: ['sleep', '60m']
              ports:
                - containerPort: 6123
                  name: rpc
                - containerPort: 6124
                  name: blob-server
                - containerPort: 8081
                  name: webui
                - containerPort: 9249
                  name: metrics
              livenessProbe:
                tcpSocket:
                  port: 6123
                initialDelaySeconds: 30
                periodSeconds: 60
              volumeMounts:
                - name: flink-config-volume
                  mountPath: /opt/flink/conf
              securityContext:
                runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
          volumes:
            - name: flink-config-volume
              configMap:
                name: flink-config
                items:
                  - key: flink-conf.yaml
                    path: flink-conf.yaml
                  - key: log4j-console.properties
                    path: log4j-console.properties
  jobmanager-rest-service.yaml: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: flink-jobmanager-rest
    spec:
      type: NodePort
      ports:
        - name: rest
          port: 8081
          targetPort: 8081
          nodePort: 30081
      selector:
        app: flink
        component: jobmanager
  jobmanager-service.yaml: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: flink-jobmanager
      labels:
        app: flink
    spec:
      type: ClusterIP
      ports:
        - name: rpc
          port: 6123
        - name: blob-server
          port: 6124
        - name: webui
          port: 8081
        - name: metrics
          port: 9249
      selector:
        app: flink
        component: jobmanager
  service-monitor.yaml: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: flink
        appScope: titan-ccp
      name: flink
    spec:
      selector:
        matchLabels:
            app: flink
      endpoints:
        - port: metrics
          interval: 10s
  taskmanager-deployment.yaml: |
    # TODO: Need to ensure only scheduled on worker nodes
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: flink-taskmanager
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: flink
          component: taskmanager
      template:
        metadata:
          labels:
            app: flink
            component: taskmanager
        spec:
          terminationGracePeriodSeconds: 0
          containers:
            - name: taskmanager
              image: ghcr.io/cau-se/theodolite-uc3-flink:latest
              resources:
                limits:
                  memory: 4Gi
                  cpu: 1000m
              args: ["taskmanager"]
              ports:
                - containerPort: 6122
                  name: rpc
                - containerPort: 6125
                  name: query-state
                - containerPort: 9249
                  name: metrics
              livenessProbe:
                tcpSocket:
                  port: 6122
                initialDelaySeconds: 30
                periodSeconds: 60
              volumeMounts:
                - name: flink-config-volume
                  mountPath: /opt/flink/conf/
              securityContext:
                runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
          volumes:
            - name: flink-config-volume
              configMap:
                name: flink-config
                items:
                  - key: flink-conf.yaml
                    path: flink-conf.yaml
                  - key: log4j-console.properties
                    path: log4j-console.properties
  taskmanager-service.yaml: |-
    apiVersion: v1
    kind: Service
    metadata:
      name: flink-taskmanager
      labels:
        app: flink
    spec:
      type: ClusterIP
      ports:
        - name: metrics
          port: 9249
      selector:
        app: flink
        component: taskmanager
