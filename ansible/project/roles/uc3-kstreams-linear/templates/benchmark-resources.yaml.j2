apiVersion: v1
kind: ConfigMap
metadata:
  name: benchmark-resources-uc3-kstreams
  namespace: default
data:
  input-topic.yaml: |
    apiVersion: kafka.strimzi.io/v1beta2
    kind: KafkaTopic
    metadata:
      name: input
      labels:
        strimzi.io/cluster: theodolite-kafka
    spec:
      partitions: 100
      replicas: 1
  output-topic.yaml: |
    apiVersion: kafka.strimzi.io/v1beta2
    kind: KafkaTopic
    metadata:
      name: output
      labels:
        strimzi.io/cluster: theodolite-kafka
    spec:
      partitions: 100
      replicas: 1
  uc3-jmx-configmap.yaml: |
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: aggregation-jmx-configmap
    data:
      jmx-kafka-prometheus.yml: |+
        jmxUrl: service:jmx:rmi:///jndi/rmi://localhost:5555/jmxrmi
        lowercaseOutputName: true
        lowercaseOutputLabelNames: true
        ssl: false
  uc3-kstreams-deployment.yaml: |-
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: titan-ccp-aggregation
    spec:
      selector:
        matchLabels:
          app: titan-ccp-aggregation
      replicas: 1
      template:
        metadata:
          labels:
            app: titan-ccp-aggregation
        spec:
          terminationGracePeriodSeconds: 0
          containers:
            - name: uc-application
              image: ghcr.io/cau-se/theodolite-uc3-kstreams-app:latest
              ports:
                - containerPort: 5555
                  name: jmx
              env:
                - name: KAFKA_BOOTSTRAP_SERVERS
                  value: "theodolite-kafka-kafka-bootstrap:9092"
                - name: SCHEMA_REGISTRY_URL
                  value: "http://theodolite-kafka-schema-registry:8081"
                - name: JAVA_OPTS
                  value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=5555"
              resources:
                limits:
                  memory: 4Gi
                  cpu: 1000m
            - name: prometheus-jmx-exporter
              image: "solsson/kafka-prometheus-jmx-exporter@sha256:6f82e2b0464f50da8104acd7363fb9b995001ddff77d248379f8788e78946143"
              command:
                - java
                - -XX:+UnlockExperimentalVMOptions
                - -XX:+UseCGroupMemoryLimitForHeap
                - -XX:MaxRAMFraction=1
                - -XshowSettings:vm
                - -jar
                - jmx_prometheus_httpserver.jar
                - "5556"
                - /etc/jmx-aggregation/jmx-kafka-prometheus.yml
              ports:
                - containerPort: 5556
              volumeMounts:
                - name: jmx-config
                  mountPath: /etc/jmx-aggregation
          volumes:
            - name: jmx-config
              configMap:
                name: aggregation-jmx-configmap
  uc3-kstreams-service.yaml: |
    apiVersion: v1
    kind: Service
    metadata:  
      name: titan-ccp-aggregation
      labels:
        app: titan-ccp-aggregation
    spec:
      #type: NodePort
      selector:    
        app: titan-ccp-aggregation
      ports:  
      - name: http
        port: 80
        targetPort: 80
        protocol: TCP
      - name: metrics
        port: 5556
  uc3-service-monitor.yaml: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: titan-ccp-aggregation
        appScope: titan-ccp
      name: titan-ccp-aggregation
    spec:
      selector:
        matchLabels:
            app: titan-ccp-aggregation
      endpoints:
        - port: metrics
          interval: 10s
